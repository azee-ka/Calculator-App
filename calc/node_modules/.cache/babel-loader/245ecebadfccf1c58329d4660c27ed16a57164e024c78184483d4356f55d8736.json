{"ast":null,"code":"var _jsxFileName = \"/Users/loveveersingh/Downloads/Github - Projects/Calculator/calc/src/app/calculator/MathInput/field/field.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { EditableMathField, addStyles } from 'react-mathquill';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './field.css';\nimport crossIcon from '../../../../assets/cross-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naddStyles();\nfunction MathField({\n  id,\n  onInputChange,\n  mathFieldRef,\n  handleEvaluateClick,\n  placeholder,\n  initialValue\n}) {\n  _s();\n  const [isPlaceholderVisible, setPlaceholderVisible] = useState(true);\n  const {\n    expression\n  } = useParams(); // Retrieve expression from URL parameters\n\n  const mathFieldConfig = {\n    autoCommands: 'pi theta sqrt',\n    autoOperatorNames: 'sin cos tan',\n    substituteTextarea: () => document.createElement('textarea'),\n    handleStyle: {\n      outline: '2px solid red'\n    },\n    degreeMode: true // Add this line to enable degree mode\n  };\n  useEffect(() => {\n    if (mathFieldRef.current) {\n      mathFieldRef.current.latex(expression || ''); // Use the expression from URL or an empty string  \n    }\n  }, [mathFieldRef]);\n  const handleChange = mathField => {\n    const inputValue = mathField.latex();\n    if (onInputChange) {\n      onInputChange(id, inputValue);\n    }\n    if (inputValue === '') {\n      setPlaceholderVisible(true);\n    } else {\n      setPlaceholderVisible(false);\n    }\n  };\n  const handleClear = () => {\n    if (mathFieldRef.current) {\n      mathFieldRef.current.latex('');\n      mathFieldRef.current.focus();\n    }\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      handleEvaluateClick();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"field-input-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"placeholder-field\",\n      children: isPlaceholderVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder\",\n        id: `placeholder-${id}`,\n        children: placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-field\",\n      children: [/*#__PURE__*/_jsxDEV(EditableMathField, {\n        config: mathFieldConfig,\n        onChange: handleChange,\n        mathquillDidMount: mathField => mathFieldRef.current = mathField,\n        onKeyDown: handleKeyDown,\n        id: id,\n        className: `math-field`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-button\",\n        onClick: handleClear,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: crossIcon,\n          alt: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(MathField, \"rJO/0uKOXKmduwp//Iuw1Q3J86o=\", false, function () {\n  return [useParams];\n});\n_c = MathField;\nexport { MathField };\nvar _c;\n$RefreshReg$(_c, \"MathField\");","map":{"version":3,"names":["React","useEffect","useState","EditableMathField","addStyles","useNavigate","useParams","crossIcon","jsxDEV","_jsxDEV","MathField","id","onInputChange","mathFieldRef","handleEvaluateClick","placeholder","initialValue","_s","isPlaceholderVisible","setPlaceholderVisible","expression","mathFieldConfig","autoCommands","autoOperatorNames","substituteTextarea","document","createElement","handleStyle","outline","degreeMode","current","latex","handleChange","mathField","inputValue","handleClear","focus","handleKeyDown","event","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","config","onChange","mathquillDidMount","onKeyDown","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/loveveersingh/Downloads/Github - Projects/Calculator/calc/src/app/calculator/MathInput/field/field.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { EditableMathField, addStyles } from 'react-mathquill';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport './field.css';\nimport crossIcon from '../../../../assets/cross-icon.png';\naddStyles();\n\nfunction MathField({ id, onInputChange, mathFieldRef, handleEvaluateClick, placeholder, initialValue }) {\n  const [isPlaceholderVisible, setPlaceholderVisible] = useState(true);\n\n  const { expression } = useParams(); // Retrieve expression from URL parameters\n\n\n  const mathFieldConfig = {\n    autoCommands: 'pi theta sqrt',\n    autoOperatorNames: 'sin cos tan',\n    substituteTextarea: () => document.createElement('textarea'),\n    handleStyle: {\n      outline: '2px solid red',\n    },\n    degreeMode: true, // Add this line to enable degree mode\n  };\n\n  useEffect(() => {\n    if (mathFieldRef.current) {\n        mathFieldRef.current.latex(expression || ''); // Use the expression from URL or an empty string  \n    }\n  }, [mathFieldRef]);\n\n  const handleChange = (mathField) => {\n    const inputValue = mathField.latex();\n    if (onInputChange) {\n      onInputChange(id, inputValue);\n    }\n\n    if (inputValue === '') {\n      setPlaceholderVisible(true);\n    } else {\n      setPlaceholderVisible(false);\n    }\n  };\n\n  const handleClear = () => {\n    if (mathFieldRef.current) {\n      mathFieldRef.current.latex('');\n      mathFieldRef.current.focus();\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      handleEvaluateClick();\n    }\n  };\n\n  return (\n    <div className='field-input-area'>\n      <div className='placeholder-field'>\n        {isPlaceholderVisible && (\n          <div className='placeholder' id={`placeholder-${id}`} >{placeholder}</div>\n        )}\n      </div>\n      <div className='edit-field'>\n          <EditableMathField\n            config={mathFieldConfig}\n            onChange={handleChange}\n            mathquillDidMount={(mathField) => (mathFieldRef.current = mathField)}\n            onKeyDown={handleKeyDown}\n            id={id}\n            className={`math-field`}\n          />\n            <button className='clear-button' onClick={handleClear}>\n              <img src={crossIcon} alt='Clear' />\n            </button>\n        </div>\n    </div>\n  );\n}\n\nexport { MathField };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}